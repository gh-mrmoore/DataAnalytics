x
3 + 5
3 * 8
3 + 5
3 + 5
3 * 8
x=> 5
x -> 5
5 -> x
x
5 * 5
5 -> x
x
6 -> y
x * y
R --version
install.packages("jsonlite")
library(jsonlite)
install.packages("tidyverse")
library(tidyverse)
clear
cls
5 <- x
5 <- x
x <- 5
x
students <- ["Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia"]
students <- c("Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
students
today <- Sys.Date
today
today <- Sys.Date()
today
today <- Sys.Date()
today
for (student in students) {
print(student)
}
for (student in students) {
combination <- sample(33,3)
print(student, combination)
}
for (student in students) {
combination <- sample(33,3)
result = paste(student,combination)
print(result)
}
for (student in students) {
combination <- sample(33,3)
print(student)
print(combination)
}
for (student in students) {
if isin("e", student) {
for (student in students) {
if isin(student, "e") {
for (student in students) {
if (isin(student, "e")) {
print(student)
}
}
x <- 1:10
y <- 3:7
isin(x,y)
x <- 1:10
y <- 3:7
x in y
x <- 1:10
y <- 3:7
x %in% y
for (student in students) {
if ("e" %in% student) {
print(student)
}
}
for (student in students) {
if ("e" %in% student) {
print(student)
}
}
for (student in students) {
namesub <- student(2,2)
if (namesub == "e") {
print(student)
}
}
for (student in students) {
namesub <- substr(student, 2, 2)
if (namesub == "e") {
print(student)
}
}
setwd("C:/Users/mrm/Desktop/CodeNew/_Analytics-GitHub/Challenges/Challenge15")
# Use the library() function to load the dplyr package.
library(dplyr)
# Import and read in the MechaCar_mpg.csv file as a dataframe.
mecha_car_mpg <- read.csv('../_scratch/MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
# Import and read in the MechaCar_mpg.csv file as a dataframe.
mecha_car_mpg <- read.csv('MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
View(mecha_car_mpg)
lm(vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, AWD, mpg, mecha_car_mpg)
lm(mpg ~ vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, AWD, mecha_car_mpg)
lm(mpg ~ vehicle_length, mecha_car_mpg)
lm(mpg ~ vehicle_weight, mecha_car_mpg)
lm(mpg ~ spoiler_angle, mecha_car_mpg)
lm(mpg ~ ground_clearance, mecha_car_mpg)
lm(mpg ~ AWD, mecha_car_mpg)
lm(mpg ~ c(vehicle_length,vehicle_weight,spoiler_angle,ground_clearance,AWD), mecha_car_mpg)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_car_mpg)
#Using the summary() function, determine the p-value and the r-squared value
# for the linear regression model.
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_car_mpg))
# import and read in the Suspension_Coil.csv file as a table.
susp_coil_data <- read.csv('Suspension_Coil.csv', check.names = F, stringsAsFactors = F)
total_summary <- summarize(susp_coil_data)
View(total_summary)
total_summary <- susp_coil_data %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI), SD=sd(PSI))
View(total_summary)
lot_summary <- total_summary %>% group_by(Manufacturing_Lot)
lot_summary <- susp_coil_data %>% group_by(Manufacturing_Lot) %>% +
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI), SD=sd(PSI))
lot_summary <- susp_coil_data %>% group_by(Manufacturing_Lot) %>% +
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI), SD=sd(PSI), .groups = 'keep')
lot_summary <- susp_coil_data %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI), .groups = 'keep')
View(lot_summary)
lot_summary <- susp_coil_data %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI), Median_PSI=median(PSI), .groups = 'keep')
lot_summary <- susp_coil_data %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI), Median_PSI=median(PSI), PSI_Variance=var(PSI), PSI_SD=sd(PSI), .groups = 'keep')
?t.test()
# write an RScript using the t.test() function to determine if the PSI across all
# manufacturing lots is statistically different from the population mean of 1,500 pounds per square inch.
t.test(mean(susp_coil_data$PSI),mu=1500)
# write an RScript using the t.test() function to determine if the PSI across all
# manufacturing lots is statistically different from the population mean of 1,500 pounds per square inch.
t.test(susp_coil_data$PSI,mu=1500)
# t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
t.test(subset(susp_coil_data$Manufacturing_Lot == 'Lot1'),mu=1500)
# t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
t.test(susp_coil_data$PSI, subset(susp_coil_data$Manufacturing_Lot == 'Lot1'))
# t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
t.test(susp_coil_data$PSI, subset = Manufacturing_Lot == 'Lot1')
t.test(susp_coil_data$PSI, subset = Manufacturing_Lot == 'Lot2')
t.test(susp_coil_data$PSI, subset = Manufacturing_Lot == 'Lot3')
t.test(susp_coil_data$PSI, subset = susp_coil_data$Manufacturing_Lot == 'Lot3')
t.test(formula = PSI ~ Manufacturing_Lot, data = susp_coil_data, subset = Manufacturing_Lot %in% 'Lot1')
t.test(formula = PSI ~ Manufacturing_Lot, data = susp_coil_data, subset = Manufacturing_Lot == 'Lot1')
t.test(x = susp_coil_data$PSI, mu = 1500, subset = susp_coil_data$Manufacturing_Lot == 'Lot1')
t.test(x = susp_coil_data$PSI, subset = susp_coil_data$Manufacturing_Lot == 'Lot1')
# write an RScript using the t.test() function to determine if the PSI across all
# manufacturing lots is statistically different from the population mean of 1,500 pounds per square inch.
t.test(susp_coil_data$PSI,mu=1500)
t.test(susp_coil_data$PSI, subset(susp_coil_data, Manufacturing_Lot == 'Lot1')[['PSI']])
t.test(susp_coil_data$PSI, subset(susp_coil_data, Manufacturing_Lot == 'Lot2')[['PSI']])
t.test(susp_coil_data$PSI, subset(susp_coil_data, Manufacturing_Lot == 'Lot3')[['PSI']])
t.test(subset(susp_coil_data, Manufacturing_Lot == 'Lot1')[['PSI']], mu=1500)
